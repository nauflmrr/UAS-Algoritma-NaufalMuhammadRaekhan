#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

// Fungsi untuk menghitung nilai maksimum dalam array
int getMax(vector<int>& arr) {
    return *max_element(arr.begin(), arr.end());
}

// Fungsi Counting Sort untuk Radix Sort
void countingSort(vector<int>& arr, int exp) {
    int n = arr.size();
    vector<int> output(n);
    int count[10] = {0};

    // Hitung frekuensi digit
    for (int i = 0; i < n; i++) {
        count[(arr[i] / exp) % 10]++;
    }

    // Akumulasi count
    for (int i = 1; i < 10; i++) {
        count[i] += count[i - 1];
    }

    // Bangun output array
    for (int i = n - 1; i >= 0; i--) {
        output[count[(arr[i] / exp) % 10] - 1] = arr[i];
        count[(arr[i] / exp) % 10]--;
    }

    // Salin output ke array asli
    for (int i = 0; i < n; i++) {
        arr[i] = output[i];
    }
}

// Fungsi utama Radix Sort
void radixSort(vector<int>& arr) {
    int maxNum = getMax(arr);

    // Lakukan Counting Sort untuk setiap digit
    for (int exp = 1; maxNum / exp > 0; exp *= 10) {
        countingSort(arr, exp);
    }
}

int main() {
	cout << "Nama :  Naufal Muhammad Raekhan" << endl;
		cout << "NIM : 231011402303" << endl;

    vector<int> arr = {170, 45, 75, 90, 802, 24, 2, 66};
    cout << "Array sebelum sorting:\n";
    for (int num : arr) {
        cout << num << " ";
    }
    cout << endl;

    radixSort(arr);

    cout << "Array setelah Radix Sort:\n";
    for (int num : arr) {
        cout << num << " ";
    }
    cout << endl;

    return 0;
}
